// <auto-generated />
using DynamicGlobalFilter.Infrastructure;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace DynamicGlobalFilter.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("DynamicGlobalFilter.Domain.Product", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<decimal>("Price")
                        .HasColumnType("numeric");

                    b.Property<int>("TenantId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Tenant 1 - Ürün 1",
                            Price = 100m,
                            TenantId = 1
                        },
                        new
                        {
                            Id = 2,
                            Name = "Tenant 1 - Ürün 2",
                            Price = 200m,
                            TenantId = 1
                        },
                        new
                        {
                            Id = 3,
                            Name = "Tenant 1 - Ürün 3",
                            Price = 300m,
                            TenantId = 1
                        },
                        new
                        {
                            Id = 4,
                            Name = "Tenant 2 - Ürün 1",
                            Price = 150m,
                            TenantId = 2
                        },
                        new
                        {
                            Id = 5,
                            Name = "Tenant 2 - Ürün 2",
                            Price = 250m,
                            TenantId = 2
                        },
                        new
                        {
                            Id = 6,
                            Name = "Tenant 3 - Ürün 1",
                            Price = 175m,
                            TenantId = 3
                        },
                        new
                        {
                            Id = 7,
                            Name = "Tenant 3 - Ürün 2",
                            Price = 275m,
                            TenantId = 3
                        },
                        new
                        {
                            Id = 8,
                            Name = "Tenant 3 - Ürün 3",
                            Price = 375m,
                            TenantId = 3
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
